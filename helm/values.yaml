Replicas: 1

orchestrator:
  inventory:
    api:
      image: docker.io/isilincoln/orchestrator-inventory-api:latest
      host: localhost
      port: 15005
      ext:
        port: 15005
      debug: true
  discovery:
    api:
      host: localhost
      port: 15010
      ext:
        port: 15010
      image: docker.io/isilincoln/orchestrator-discovery-api:latest
      debug: true
    scanner:
      host: localhost
      port: 15020
      ext:
        port: 15020
      image: docker.io/isilincoln/orchestrator-discovery-scanner:latest
      debug: true
  sabres:
    network:
      host: localhost
      port: 15025
      image: docker.io/isilincoln/orchestrator-sabres-network:latest
      debug: true
    cbs:
      host: localhost
      port: 15030
      image: docker.io/isilincoln/orchestrator-sabres-cbs:latest
      debug: true
    manager:
      host: localhost
      port: 15035
      image: docker.io/isilincoln/orchestrator-sabres-manager:latest
      debug: true
  mock:
    discovery:
      image: docker.io/isilincoln/orchestrator-mock-discovery:latest
      host: localhost
      port: 15015
      debug: true

etcd:
  host: localhost
  port: 2379
  ext:
    port: 2379
  image: bitnami/etcd:3.3.10

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
